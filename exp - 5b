import 'package:flutter/material.dart';
import 'package:provider/provider.dart';

class CounterModel extends ChangeNotifier {
  int count = 0;
  void increment() {
    count++;
    notifyListeners();
  }
}

void main() => runApp(
      ChangeNotifierProvider(
        create: (_) => CounterModel(),
        child: MyApp(),
      ),
    );

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) => MaterialApp(
        home: Scaffold(
          appBar: AppBar(title: Text('setState vs Provider')),
          body: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              SetStateCounter(),
              Divider(thickness: 2, height: 50),
              ProviderCounter(),
            ],
          ),
        ),
      );
}

class SetStateCounter extends StatefulWidget {
  @override
  _SetStateCounterState createState() => _SetStateCounterState();
}

class _SetStateCounterState extends State<SetStateCounter> {
  int _counter = 0;
  @override
  Widget build(BuildContext context) => Column(
        children: [
          Text('setState Counter: $_counter', style: TextStyle(fontSize: 20)),
          ElevatedButton(
            onPressed: () => setState(() => _counter++),
            child: Text('Increment with setState'),
          ),
        ],
      );
}

class ProviderCounter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    final counter = context.watch<CounterModel>().count;
    return Column(
      children: [
        Text('Provider Counter: $counter', style: TextStyle(fontSize: 20)),
        ElevatedButton(
          onPressed: () => context.read<CounterModel>().increment(),
          child: Text('Increment with Provider'),
        ),
      ],
    );
  }
}
